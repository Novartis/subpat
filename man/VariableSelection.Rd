% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_VariableSelection.R
\name{VariableSelection}
\alias{VariableSelection}
\title{Variable Selection Module}
\format{R6 class}
\description{
Shiny \code{\link[tidymodules]{TidyModule}} to select variables from a data set. Includes exporting functionality (to HTML). Interface uses bs4Dash.
}
\section{Input}{

\describe{
  \item{\code{dataset}}{A data sets. Can be tibble, data frame, etc.}
  \item{\code{options }}{
    The options for the module of type \code{\link[shiny]{reactiveValues}} with values
    \describe{
    \item{\code{datasetname}}{The default dataset name that will appear in the header. Default: \code{""}}
    \item{\code{idvar}}{ID field that is common across all datasets in \code{input:datalist}. Default \code{USUBJID}}
    }
  }
}
}

\section{Output}{

\describe{
  \item{\code{filtered_indices}}{The output data set indices after filtering, selecting  and reordering columns.}
  \item{\code{filtered_data}}{The output data set after filtering, selecting and reordering columns.}
  \item{\code{filtered_columns}}{The names of the columns that have been selected.}
  \item{\code{search_columns}}{The searches applied to the data table.}
}
}

\examples{
\dontrun{
library(tidymodules)
library(bs4Dash)
library(subpat)

varSelMod <- VariableSelection$new()

ui <- tagList(
  shinyjs::useShinyjs(),
  bs4DashPage(
    sidebar = bs4DashSidebar(disable = TRUE),
    
    body = bs4DashBody(
      fileInput("file1", "Choose SAS File",
                multiple = FALSE,
                accept = c(".sas7bdat")),
      
      conditionalPanel(condition = 'output.file_uploaded',
                       varSelMod$ui(),
                       verbatimTextOutput('tableIndices'),
                       verbatimTextOutput('filteredTable'),
                       verbatimTextOutput('searchColumns'))
    )
  )
)

# Define server logic
server <- function(input, output) {
  opts <- reactiveValues(
    datasetname = NULL,
    idvar = "USUBJID"
  )
  
  varSelMod$callModule()
  
  output$file_uploaded <- reactive({
    return(!is.null(input$file1))
  })
  
  outputOptions(output, 'file_uploaded', suspendWhenHidden=FALSE)
  
  observe({
    req(input$file1)
    dat <- haven::read_sas(input$file1$datapath)
    opts$datasetname <- input$file1$name
    
    # Pass the uploaded data into the module
    reactive(dat) \%>1\% varSelMod
    # Pass the options into the module
    opts \%>2\% varSelMod
    
  })
  
  # Show the output indices from the module
  output$tableIndices <- renderPrint({
    print(varSelMod$getOutput("filtered_indices")())
  })
  
  # Show the filtered data from the table
  output$filteredTable <- renderPrint({
    print(varSelMod$getOutput("filtered_data")())
  })
  
  # Show the strings entered in the search columns
  output$searchColumns <- renderPrint({
    print(varSelMod$getOutput("search_columns")())
  })
}

# Run the application 
shinyApp(ui = ui, server = server)

}
}
\seealso{
Other tidymodules: 
\code{\link{Filter}},
\code{\link{SubgroupManager}},
\code{\link{Subgroup}},
\code{\link{SubpopulationManager}},
\code{\link{Subpopulation}},
\code{\link{TTEMapping}},
\code{\link{TTE}},
\code{\link{TableListing}}
}
\concept{tidymodules}
\keyword{TidyModule}
\section{Super class}{
\code{\link[tidymodules:TidyModule]{tidymodules::TidyModule}} -> \code{VariableSelection}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{VariableSelection$new()}}
\item \href{#method-ui}{\code{VariableSelection$ui()}}
\item \href{#method-server}{\code{VariableSelection$server()}}
\item \href{#method-clone}{\code{VariableSelection$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="addInputPort">}\href{../../tidymodules/html/TidyModule.html#method-addInputPort}{\code{tidymodules::TidyModule$addInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="addOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-addOutputPort}{\code{tidymodules::TidyModule$addOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="assignPort">}\href{../../tidymodules/html/TidyModule.html#method-assignPort}{\code{tidymodules::TidyModule$assignPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="callModule">}\href{../../tidymodules/html/TidyModule.html#method-callModule}{\code{tidymodules::TidyModule$callModule()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="countInputPort">}\href{../../tidymodules/html/TidyModule.html#method-countInputPort}{\code{tidymodules::TidyModule$countInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="countOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-countOutputPort}{\code{tidymodules::TidyModule$countOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="deepClone">}\href{../../tidymodules/html/TidyModule.html#method-deepClone}{\code{tidymodules::TidyModule$deepClone()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="definePort">}\href{../../tidymodules/html/TidyModule.html#method-definePort}{\code{tidymodules::TidyModule$definePort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="doServer">}\href{../../tidymodules/html/TidyModule.html#method-doServer}{\code{tidymodules::TidyModule$doServer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="execInput">}\href{../../tidymodules/html/TidyModule.html#method-execInput}{\code{tidymodules::TidyModule$execInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="execOutput">}\href{../../tidymodules/html/TidyModule.html#method-execOutput}{\code{tidymodules::TidyModule$execOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getGlobalSession">}\href{../../tidymodules/html/TidyModule.html#method-getGlobalSession}{\code{tidymodules::TidyModule$getGlobalSession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInput">}\href{../../tidymodules/html/TidyModule.html#method-getInput}{\code{tidymodules::TidyModule$getInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInputPort">}\href{../../tidymodules/html/TidyModule.html#method-getInputPort}{\code{tidymodules::TidyModule$getInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInputPorts">}\href{../../tidymodules/html/TidyModule.html#method-getInputPorts}{\code{tidymodules::TidyModule$getInputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutput">}\href{../../tidymodules/html/TidyModule.html#method-getOutput}{\code{tidymodules::TidyModule$getOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-getOutputPort}{\code{tidymodules::TidyModule$getOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutputPorts">}\href{../../tidymodules/html/TidyModule.html#method-getOutputPorts}{\code{tidymodules::TidyModule$getOutputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getPortDef">}\href{../../tidymodules/html/TidyModule.html#method-getPortDef}{\code{tidymodules::TidyModule$getPortDef()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getPortName">}\href{../../tidymodules/html/TidyModule.html#method-getPortName}{\code{tidymodules::TidyModule$getPortName()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getSession">}\href{../../tidymodules/html/TidyModule.html#method-getSession}{\code{tidymodules::TidyModule$getSession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getSessionId">}\href{../../tidymodules/html/TidyModule.html#method-getSessionId}{\code{tidymodules::TidyModule$getSessionId()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinyInput">}\href{../../tidymodules/html/TidyModule.html#method-getShinyInput}{\code{tidymodules::TidyModule$getShinyInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinyOutput">}\href{../../tidymodules/html/TidyModule.html#method-getShinyOutput}{\code{tidymodules::TidyModule$getShinyOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinySession">}\href{../../tidymodules/html/TidyModule.html#method-getShinySession}{\code{tidymodules::TidyModule$getShinySession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getStore">}\href{../../tidymodules/html/TidyModule.html#method-getStore}{\code{tidymodules::TidyModule$getStore()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="iport">}\href{../../tidymodules/html/TidyModule.html#method-iport}{\code{tidymodules::TidyModule$iport()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="isGlobal">}\href{../../tidymodules/html/TidyModule.html#method-isGlobal}{\code{tidymodules::TidyModule$isGlobal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="isStored">}\href{../../tidymodules/html/TidyModule.html#method-isStored}{\code{tidymodules::TidyModule$isStored()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="ns">}\href{../../tidymodules/html/TidyModule.html#method-ns}{\code{tidymodules::TidyModule$ns()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="oport">}\href{../../tidymodules/html/TidyModule.html#method-oport}{\code{tidymodules::TidyModule$oport()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="print">}\href{../../tidymodules/html/TidyModule.html#method-print}{\code{tidymodules::TidyModule$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="render">}\href{../../tidymodules/html/TidyModule.html#method-render}{\code{tidymodules::TidyModule$render()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="reset">}\href{../../tidymodules/html/TidyModule.html#method-reset}{\code{tidymodules::TidyModule$reset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateInputPort">}\href{../../tidymodules/html/TidyModule.html#method-updateInputPort}{\code{tidymodules::TidyModule$updateInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateInputPorts">}\href{../../tidymodules/html/TidyModule.html#method-updateInputPorts}{\code{tidymodules::TidyModule$updateInputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-updateOutputPort}{\code{tidymodules::TidyModule$updateOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateOutputPorts">}\href{../../tidymodules/html/TidyModule.html#method-updateOutputPorts}{\code{tidymodules::TidyModule$updateOutputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="use">}\href{../../tidymodules/html/TidyModule.html#method-use}{\code{tidymodules::TidyModule$use()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VariableSelection$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\subsection{Method \code{ui()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VariableSelection$ui()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-server"></a>}}
\subsection{Method \code{server()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VariableSelection$server(
  input,
  output,
  session,
  dataset = NULL,
  options = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VariableSelection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
