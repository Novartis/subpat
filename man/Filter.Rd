% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_Filter.R
\name{Filter}
\alias{Filter}
\title{Filter Module}
\format{R6 class}
\description{
The filter module provides an interface to select a data set, variable, and a query based on the value.
}
\section{Input}{

\describe{
  \item{\code{datalist}}{A list of data sets. Can be tibbles, data frames, etc. Expects them to have a common ID field (default is \code{USUBJID})}
  \item{\code{options}}{
    The options for the module of type \code{\link[shiny]{reactiveValues}} with values \describe{
  \item{\code{expanded}}{Should the accordion be expanded when created? Default: \code{TRUE}}
  \item{\code{subjectDs}}{If one of the data sets in \code{datalist} contains subject level data then provide it here. Default: \code{ADSL}}
  \item{\code{idvar}}{ID field that is common across all datasets in \code{input:datalist}. Default \code{USUBJID}}
    }
  }
}
}

\section{Output}{

\describe{
\item{\code{filter}}{S3 object \code{\link{DatasetFilter}}}
}
}

\examples{
\dontrun{
library(tidymodules)
library(subpat)
library(bs4Dash)

addFilter1 <- Filter$new()

ui <- tagList(
  shinyjs::useShinyjs(),
  bs4DashPage(
    sidebar = bs4DashSidebar(disable = TRUE),
    
    body = bs4DashBody(
      bs4Accordion(id = 'filterAccordion',
                   addFilter1$ui()),
      
      verbatimTextOutput('filter_results'),
      verbatimTextOutput('showPatients')
    )
  )
)

# Define server logic
server <- function(input, output) {
  datalist <- reactive({
    example_datasets <- list(
      "ADSL" = data.frame(
       a = c("x", "z", "y", "x", "z", "x", "x", "y", "x", "y"),
       b = c(29L, 4L, 15L, 28L, 41L, 25L, 41L, 15L, 6L, 17L),
       USUBJID = as.character(seq_len(10)),
       stringsAsFactors = FALSE
     ),
     "ADAE" = data.frame(
       a = c("x", "z", "y", "x", "z", "x", "x", "y", "x", "y"),
       c = c(1, NA, NA, 1, 2, NA, NA, 4, 3, 1),
        dates = seq(as.Date("2019-07-10"), as.Date("2019-08-12"), length.out = 10),
       USUBJID = as.character(seq_len(10)),
       stringsAsFactors = FALSE
     ) 
    )
  })
  
  opts <- reactiveValues(
    subjectDs = "ADSL",
    idvar = "USUBJID"
  )
  
  addFilter1$callModule()
  
  observe({
    # Add the options to the filter module
    opts \%>2\% addFilter1
    # Add the data to the filter module
    datalist \%>1\% addFilter1
  })
  
  output$filter_results <- renderPrint({
    filter_reactive <- addFilter1$getOutput("filter")
    str(filter_reactive())
  })
}
# Run the application 
shinyApp(ui = ui, server = server)
}
}
\seealso{
Other tidymodules: 
\code{\link{SubgroupManager}},
\code{\link{Subgroup}},
\code{\link{SubpopulationManager}},
\code{\link{Subpopulation}},
\code{\link{TTEMapping}},
\code{\link{TTE}},
\code{\link{TableListing}},
\code{\link{VariableSelection}}
}
\concept{tidymodules}
\keyword{TidyModule}
\section{Super class}{
\code{\link[tidymodules:TidyModule]{tidymodules::TidyModule}} -> \code{Filter}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Filter$new()}}
\item \href{#method-ui}{\code{Filter$ui()}}
\item \href{#method-server}{\code{Filter$server()}}
\item \href{#method-clone}{\code{Filter$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="addInputPort">}\href{../../tidymodules/html/TidyModule.html#method-addInputPort}{\code{tidymodules::TidyModule$addInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="addOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-addOutputPort}{\code{tidymodules::TidyModule$addOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="assignPort">}\href{../../tidymodules/html/TidyModule.html#method-assignPort}{\code{tidymodules::TidyModule$assignPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="callModule">}\href{../../tidymodules/html/TidyModule.html#method-callModule}{\code{tidymodules::TidyModule$callModule()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="countInputPort">}\href{../../tidymodules/html/TidyModule.html#method-countInputPort}{\code{tidymodules::TidyModule$countInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="countOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-countOutputPort}{\code{tidymodules::TidyModule$countOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="deepClone">}\href{../../tidymodules/html/TidyModule.html#method-deepClone}{\code{tidymodules::TidyModule$deepClone()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="definePort">}\href{../../tidymodules/html/TidyModule.html#method-definePort}{\code{tidymodules::TidyModule$definePort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="doServer">}\href{../../tidymodules/html/TidyModule.html#method-doServer}{\code{tidymodules::TidyModule$doServer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="execInput">}\href{../../tidymodules/html/TidyModule.html#method-execInput}{\code{tidymodules::TidyModule$execInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="execOutput">}\href{../../tidymodules/html/TidyModule.html#method-execOutput}{\code{tidymodules::TidyModule$execOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getGlobalSession">}\href{../../tidymodules/html/TidyModule.html#method-getGlobalSession}{\code{tidymodules::TidyModule$getGlobalSession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInput">}\href{../../tidymodules/html/TidyModule.html#method-getInput}{\code{tidymodules::TidyModule$getInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInputPort">}\href{../../tidymodules/html/TidyModule.html#method-getInputPort}{\code{tidymodules::TidyModule$getInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getInputPorts">}\href{../../tidymodules/html/TidyModule.html#method-getInputPorts}{\code{tidymodules::TidyModule$getInputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutput">}\href{../../tidymodules/html/TidyModule.html#method-getOutput}{\code{tidymodules::TidyModule$getOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-getOutputPort}{\code{tidymodules::TidyModule$getOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getOutputPorts">}\href{../../tidymodules/html/TidyModule.html#method-getOutputPorts}{\code{tidymodules::TidyModule$getOutputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getPortDef">}\href{../../tidymodules/html/TidyModule.html#method-getPortDef}{\code{tidymodules::TidyModule$getPortDef()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getPortName">}\href{../../tidymodules/html/TidyModule.html#method-getPortName}{\code{tidymodules::TidyModule$getPortName()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getSession">}\href{../../tidymodules/html/TidyModule.html#method-getSession}{\code{tidymodules::TidyModule$getSession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getSessionId">}\href{../../tidymodules/html/TidyModule.html#method-getSessionId}{\code{tidymodules::TidyModule$getSessionId()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinyInput">}\href{../../tidymodules/html/TidyModule.html#method-getShinyInput}{\code{tidymodules::TidyModule$getShinyInput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinyOutput">}\href{../../tidymodules/html/TidyModule.html#method-getShinyOutput}{\code{tidymodules::TidyModule$getShinyOutput()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getShinySession">}\href{../../tidymodules/html/TidyModule.html#method-getShinySession}{\code{tidymodules::TidyModule$getShinySession()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="getStore">}\href{../../tidymodules/html/TidyModule.html#method-getStore}{\code{tidymodules::TidyModule$getStore()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="iport">}\href{../../tidymodules/html/TidyModule.html#method-iport}{\code{tidymodules::TidyModule$iport()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="isGlobal">}\href{../../tidymodules/html/TidyModule.html#method-isGlobal}{\code{tidymodules::TidyModule$isGlobal()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="isStored">}\href{../../tidymodules/html/TidyModule.html#method-isStored}{\code{tidymodules::TidyModule$isStored()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="ns">}\href{../../tidymodules/html/TidyModule.html#method-ns}{\code{tidymodules::TidyModule$ns()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="oport">}\href{../../tidymodules/html/TidyModule.html#method-oport}{\code{tidymodules::TidyModule$oport()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="print">}\href{../../tidymodules/html/TidyModule.html#method-print}{\code{tidymodules::TidyModule$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="render">}\href{../../tidymodules/html/TidyModule.html#method-render}{\code{tidymodules::TidyModule$render()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="reset">}\href{../../tidymodules/html/TidyModule.html#method-reset}{\code{tidymodules::TidyModule$reset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateInputPort">}\href{../../tidymodules/html/TidyModule.html#method-updateInputPort}{\code{tidymodules::TidyModule$updateInputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateInputPorts">}\href{../../tidymodules/html/TidyModule.html#method-updateInputPorts}{\code{tidymodules::TidyModule$updateInputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateOutputPort">}\href{../../tidymodules/html/TidyModule.html#method-updateOutputPort}{\code{tidymodules::TidyModule$updateOutputPort()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="updateOutputPorts">}\href{../../tidymodules/html/TidyModule.html#method-updateOutputPorts}{\code{tidymodules::TidyModule$updateOutputPorts()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tidymodules" data-topic="TidyModule" data-id="use">}\href{../../tidymodules/html/TidyModule.html#method-use}{\code{tidymodules::TidyModule$use()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Filter$new(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ui"></a>}}
\subsection{Method \code{ui()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Filter$ui()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-server"></a>}}
\subsection{Method \code{server()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Filter$server(input, output, session, data = NULL, options = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Filter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
